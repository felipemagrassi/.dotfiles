#!/bin/bash

git submodule update --init --recursive

if [ ! command -v nvim &> /dev/null ]; then
    echo "installing unstable neovim"
    sudo add-apt-repository ppa:neovim-ppa/unstable -y
fi

sudo apt update
sudo apt-get install -y stow tmux zsh curl git bat make gcc ripgrep unzip git xclip neovim build-essential libreadline-dev unzip lua5.4 luarocks jq mpv

# Oh my zsh
ZSH_CUSTOM=${ZSH_CUSTOM:-~/.oh-my-zsh/custom}
echo "installing oh my zsh"
if [ ! -d "$ZSH_CUSTOM" ]; then
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    curl -sS https://starship.rs/install.sh | sh
fi

# ZSH autosuggestions
if [ ! -d "$ZSH_CUSTOM/plugins/zsh-autosuggestions" ]; then
  git clone https://github.com/zsh-users/zsh-autosuggestions "$ZSH_CUSTOM/plugins/zsh-autosuggestions"
fi

# ZSH Syntax Highlighting
if [ ! -d "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting" ]; then
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting"
fi

# ZSH History Substring Search
if [ ! -d "$ZSH_CUSTOM/plugins/zsh-history-substring-search" ]; then
  git clone https://github.com/zsh-users/zsh-history-substring-search "$ZSH_CUSTOM/plugins/zsh-history-substring-search"
fi

## installing typescript

if [ ! command -v pnpm &> /dev/null ]; then
    echo "installing pnpm"
    curl -fsSL https://get.pnpm.io/install.sh | sh -
else
    echo "pnpm already installed"
fi

## installing golang

if [ ! command -v go &> /dev/null ]; then
    echo "installing golang"
    GO_VERSION=$(curl -s https://go.dev/dl/?mode=json | jq -r '.[0].version')
    wget https://storage.googleapis.com/golang/$GO_VERSION.linux-amd64.tar.gz
    rm -rf /usr/local/go && tar -C /usr/local -xzf $GO_VERSION.linux-amd64.tar.gz
    rm $GO_VERSION.linux-amd64.tar.gz
else
    echo "golang already installed"
fi

if ! command -v volta &> /dev/null; then
    echo "Installing Volta as package manager for Node"
    curl https://get.volta.sh | bash
    volta install node
else 
    echo "Node already installed"
fi

echo "stowing..."
for d in $(ls -d */ | cut -f1 -d '/'); do
  (stow --adopt "$d")
done

git restore .

